{"version":3,"sources":["config/firebase.js","components/animations/SuccessIcon.js","components/account/Signup.js","components/account/Login.js","components/account/Logout.js","components/widgets/AdminTools.js","components/forms/SubmitForm.js","components/widgets/SubmitButton.js","components/posters/Posters.js","components/posters/Review.js","components/posters/Archive.js","components/account/UserContext.js","components/Date.js","App.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SuccessIcon","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","className","options","Signup","useState","loggedIn","setLoggedIn","errorMessage","setErrorMessage","toHome","setToHome","useForm","register","handleSubmit","to","style","marginBottom","onSubmit","data","email","password","auth","createUserWithEmailAndPassword","then","u","setTimeout","catch","error","errorCode","code","message","console","log","htmlFor","type","ref","name","placeholder","href","Login","signInWithEmailAndPassword","Grid","container","spacing","justify","item","xs","Alert","severity","TextField","id","label","variant","inputRef","width","marginTop","Logout","useEffect","signOut","AdminTools","toolsActive","setToolsActive","amountToReview","setAmountToReview","axios","get","res","amount","map","poster","onClick","SubmitForm","props","acts","setActs","formIsOpen","setIsOpen","picture","setPicture","pictureURL","setPictureURL","loading","setLoading","setError","setUploadError","React","moment","locale","format","selectedDate","setSelectedDate","handleDateChange","date","onChangePicture","e","a","URL","createObjectURL","target","files","open","addPoster","description","fd","FormData","append","config","headers","post","result","url","currentDate","add","newPoster","image","title","genre","price","location","start_time","end_time","creation_date","accepted","rejected","opacity","onChange","src","noValidate","utils","DateFnsUtils","value","KeyboardButtonProps","ampm","InputLabelProps","shrink","fullWidth","chips","TextareaAutosize","aria-label","rowsMin","disabled","SubmitButton","submitFormOpened","setOpenSubmitForm","Posters","user","posters","setPosters","allGenres","setAllGenres","posterInfo","setPosterInfo","posterDetailOpened","setPosterDetailOpened","searchResults","setSearchResults","searchResultsAmount","setSearchResultsAmount","searchedTitle","setSearchedTitle","selectedGenre","setSelectedGenre","selectedPrice","setSelectedPrice","results","filter","toString","toLowerCase","indexOf","parseInt","length","availablePosters","genres","push","x","i","sort","b","getPosters","showPosterInfo","alt","Container","maxWidth","FormControl","event","InputLabel","Select","labelId","MenuItem","breakpointCols","default","1100","700","500","columnClassName","index","_id","Review","posterTitle","setPosterTitle","setPosterGenre","posterId","setPosterId","acceptPoster","put","editPoster","poster_id","Tooltip","class","IconButton","act","Archive","UserContext","createContext","Date","disableToolbar","margin","App","setUser","useMemo","unsubscribe","onAuthStateChanged","Provider","path","exact","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a050a61.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = firebase.initializeApp({\r\n  apiKey: \"AIzaSyAUyGO8zzTlj0sAQEsYcLucJiLVKWxbW_U\",\r\n  authDomain: \"posterwall-c4575.firebaseapp.com\",\r\n  databaseURL: \"https://posterwall-c4575.firebaseio.com\",\r\n  projectId: \"posterwall-c4575\",\r\n  storageBucket: \"posterwall-c4575.appspot.com\",\r\n  messagingSenderId: \"724985867044\",\r\n  appId: \"1:724985867044:web:f6a672b573e902e82521b1\"\r\n});\r\n\r\nexport { firebaseConfig as firebase };","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\nimport animationData from '../../assets/img/success.json';\r\n\r\nconst SuccessIcon = () => {\r\n\r\n    const defaultOptions = {\r\n      loop: false,\r\n      autoplay: true,\r\n      animationData: animationData,\r\n      rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n      }\r\n    };\r\n\r\n    return(\r\n      <div className=\"animation-container\">\r\n        <Lottie options={defaultOptions}\r\n        />\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SuccessIcon","import React, { useState } from 'react';\r\nimport { useForm }  from 'react-hook-form';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { firebase } from '../../config/firebase';\r\n\r\n// Import loading icon from Lottie\r\nimport SuccessIcon from \"../animations/SuccessIcon\";\r\n\r\nimport '../Form.css';\r\n\r\nexport const Signup = () => {\r\n\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const [toHome, setToHome] = useState(false);\r\n\r\n  const {register, handleSubmit} = useForm();\r\n  \r\n  const signUp = (data) => {\r\n    const email = data.email;\r\n    const password = data.password;\r\n    firebase.auth().createUserWithEmailAndPassword(email, password).then((u) => {\r\n      setLoggedIn(true);\r\n      setTimeout(() => setToHome(true), 2000);\r\n    }).catch((error) => {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // ...\r\n      console.log(errorCode);\r\n      console.log(errorMessage);\r\n\r\n      setErrorMessage(errorMessage);\r\n    }); \r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      { toHome ? <Redirect to=\"/\" /> : null }\r\n\r\n      { loggedIn ?\r\n        <div className=\"icon-screen\">\r\n          <SuccessIcon />\r\n          <p>You have been succesfully signed up and logged in.</p>\r\n        </div>\r\n      :\r\n      <div className=\"form-container\">\r\n        <div className=\"form\">\r\n          <h1 className=\"title\">\r\n            Sign up\r\n          </h1>\r\n          { errorMessage ? <div style={{ marginBottom: '1.5rem' }}>{errorMessage}</div> : ''}\r\n          <form onSubmit={handleSubmit(signUp)}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">\r\n                <input className=\"form-input\" type=\"email\" ref={register} name=\"email\" placeholder=\"E-mailadres\" />\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">\r\n                <input className=\"form-input\" type=\"password\" ref={register} name=\"password\" placeholder=\"Wachtwoord\" />\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-blue\">Sign up</button>\r\n          </form>\r\n        </div>\r\n        <div className=\"form-bottom\">\r\n          <p>Already have an account? <a href=\"/login\">Login here</a>.</p>\r\n        </div>\r\n      </div>\r\n      }\r\n    </>\r\n  )\r\n\r\n};","import React, { useState } from 'react';\r\nimport { useForm }  from 'react-hook-form';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { firebase } from '../../config/firebase';\r\n\r\n// Import loading icon from Lottie\r\nimport SuccessIcon from \"../animations/SuccessIcon\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport '../Form.css';\r\nimport '../MaterialUi.css';\r\n\r\nexport const Login = () => {\r\n\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const [toHome, setToHome] = useState(false);\r\n\r\n  const {register, handleSubmit} = useForm();\r\n\r\n  const logIn = (data) => {\r\n      const email = data.email;\r\n      const password = data.password;\r\n      firebase.auth().signInWithEmailAndPassword(email, password).then((u) => {\r\n        setLoggedIn(true);\r\n        setTimeout(() => setToHome(true), 2000);\r\n      }).catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // ...\r\n        console.log(errorCode);\r\n        console.log(errorMessage);\r\n  \r\n        setErrorMessage(errorMessage);\r\n      }); \r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n    { toHome ? <Redirect to=\"/posters\" /> : null }\r\n\r\n    { loggedIn ?\r\n      <div className=\"icon-screen\">\r\n        <SuccessIcon />\r\n        <p>You have been succesfully logged in.</p>\r\n      </div>\r\n    :\r\n      <div className=\"form-container\">\r\n        <div className=\"form\">\r\n          <h1 className=\"title\">\r\n            Log in\r\n          </h1>\r\n\r\n          <form className=\"small-form\" onSubmit={handleSubmit(logIn)}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n\r\n              <Grid item xs={12}>\r\n                { errorMessage ? <Alert severity=\"error\">{ errorMessage }</Alert> : null}\r\n              </Grid> \r\n\r\n              <Grid item xs={12}>\r\n                <TextField \r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  label=\"E-mail address\"\r\n                  variant=\"outlined\"\r\n                  className=\"form-input\"\r\n                  inputRef={register}\r\n                />\r\n              </Grid> \r\n\r\n              <Grid item xs={12}>\r\n                <TextField \r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  className=\"form-input\"\r\n                  inputRef={register}\r\n                />\r\n\r\n                <Grid item xs={12}>\r\n                  <button type=\"submit\" className=\"btn\" style={{ width: '100%', marginTop: '1.5rem' }}>Log in</button>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <div className=\"form-bottom\">\r\n                    <p>Don't have an account? <a href=\"/signup\">Sign up here</a>.</p>\r\n                  </div>\r\n                </Grid> \r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n    }\r\n    </>\r\n  )\r\n\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { firebase } from '../../config/firebase';\r\n\r\n// Import loading icon from Lottie\r\nimport SuccessIcon from \"../animations/SuccessIcon\";\r\n\r\nexport const Logout = () => {\r\n\r\n  const [loggedIn, setLoggedIn] = useState(true);\r\n  const [toHome, setToHome] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().signOut().then(function() {\r\n      // Sign-out successful.\r\n      setLoggedIn(false);\r\n      setTimeout(() => setToHome(true), 2000);\r\n      console.log('uitgelogt');\r\n    }).catch(function(error) {\r\n      // An error happened.\r\n      console.log(error);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n\r\n    { !loggedIn ?\r\n      <>\r\n        { toHome ? <Redirect to=\"/posters\" /> : null }\r\n        <div className=\"icon-screen\">\r\n          <SuccessIcon />\r\n          <p>You have been succesfully logged out.</p>\r\n        </div>\r\n      </>\r\n    :\r\n      null\r\n    }\r\n    </>\r\n  )\r\n\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FaTools, FaFileArchive, FaFileSignature } from 'react-icons/fa';\r\n\r\nimport './Tools.css';\r\n\r\nexport const AdminTools = () => {\r\n  \r\n  const [toolsActive, setToolsActive] = useState(false);\r\n\r\n  const [amountToReview, setAmountToReview] = useState(0);\r\n\r\n  // Get all posters and store them in an array\r\n  const getPostersToReview = () => {\r\n    // Get posters\r\n    axios.get(`/api/posters/not-accepted`)\r\n    .then(res => {\r\n      let amount = 0;\r\n      res.data.map(poster => {\r\n        amount = amount + 1;\r\n      });\r\n      setAmountToReview(amount);\r\n    });\r\n  }\r\n\r\n  // Get posters on page load\r\n  useEffect(() => {\r\n    getPostersToReview();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"admin-tools\">\r\n      <div className={toolsActive ? `tools active` : `tools`}>\r\n        <div className=\"tool\">\r\n          <Link to=\"/review\"><FaFileSignature /></Link>\r\n          <span className=\"amount\">{ amountToReview }</span>\r\n          <div className=\"tool-label\">\r\n            <span>Review</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"tool\">\r\n          <Link to=\"/archive\"><FaFileArchive /></Link>\r\n          <div className=\"tool-label\">\r\n            <span>Archive</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='tool-icon' onClick={() => setToolsActive(!toolsActive)}>\r\n        <FaTools />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport { FaTimes, FaFileAlt } from 'react-icons/fa';\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/nl';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport '../forms/SubmitForm.css';\r\nimport '../Form.css';\r\n\r\n// Import loading icon from Lottie\r\nimport SuccessIcon from \"../animations/SuccessIcon\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport ChipInput from 'material-ui-chip-input';\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nexport const SubmitForm = (props) => {\r\n\r\n  const [acts, setActs] = useState([]);\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const [formIsOpen, setIsOpen] = useState(false);\r\n\r\n  // Submit modal\r\n  const [picture, setPicture] = useState('https://via.placeholder.com/400x600');\r\n  const [pictureURL, setPictureURL] = useState('');\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [uploadError, setUploadError] = useState(null);\r\n  \r\n  const [selectedDate, setSelectedDate] = React.useState(moment().locale('nl').format(\"YYYY-MM-DD\"));\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onChangePicture = async e => {\r\n\r\n    setPicture(URL.createObjectURL(e.target.files[0]));\r\n    setPictureURL(e.target.files[0]);\r\n  };\r\n\r\n  // Set modal opened\r\n  useEffect(() => {\r\n    setIsOpen(formIsOpen);\r\n  }, [formIsOpen]);\r\n\r\n  useEffect(() => {\r\n    setIsOpen(props.open);\r\n  }, [props.open]);\r\n\r\n  // Add poster to the database\r\n  const addPoster = async (data) => {\r\n\r\n    console.log(data);\r\n    console.log(data.description);\r\n\r\n    setLoading(true);\r\n\r\n    let CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/dk9dh4jbu/upload';\r\n\r\n    const fd = new FormData();\r\n    fd.append('file', pictureURL);\r\n    fd.append('upload_preset', 'testing');\r\n    fd.append('cloud_name', 'dk9dh4jbu');\r\n\r\n    try {\r\n      const config = {\r\n        headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\r\n      };\r\n            \r\n      try {\r\n        let result = await axios.post(CLOUDINARY_URL, fd, config);\r\n        console.log(result.data.url);\r\n    \r\n        var currentDate =  moment().locale('nl').add(1, 'hours').format(\"YYYY-MM-DD HH:mm:ss\");\r\n   \r\n        const newPoster = {\r\n          image: result.data.url,\r\n          title: data.title,\r\n          genre: data.genre,\r\n          acts: acts,\r\n          description: data.description,\r\n          price: data.price,\r\n          date: data.date,\r\n          location: data.location,\r\n          start_time: data.start_time,\r\n          end_time: data.end_time,\r\n          creation_date: currentDate,\r\n          accepted: false,\r\n          rejected: false\r\n        };\r\n    \r\n        axios.post(`/api/posters/add`, newPoster)\r\n        .then(res => {\r\n          // getPosters();\r\n          console.log(res.data);\r\n          setPicture('');\r\n          setPictureURL('');\r\n          setLoading(false);\r\n        })\r\n        .then(res => {\r\n          setTimeout(() => {\r\n            setIsOpen(false);\r\n            setLoading(false);\r\n          }, 1500);\r\n        });\r\n\r\n      // Image could not be uploaded\r\n      } catch (err) {\r\n        console.log(err);\r\n        setUploadError(err);\r\n      }\r\n\r\n    } catch(err) {\r\n        console.log(err);\r\n        setLoading(false);\r\n        setError(err);\r\n        console.log(err);\r\n    }\r\n\r\n  }\r\n\r\n  const handleChange = (data) => {\r\n    setActs(data);\r\n  }\r\n\r\n  return (\r\n    <div className={ formIsOpen ? 'slide-out slide-out-form opened' : 'slide-out slide-out-form' }>\r\n\r\n      { loading ?\r\n        <div className=\"icon-screen\">\r\n          <SuccessIcon />\r\n          <p>The poster has succesfully been uploaded.</p>\r\n          { error ? error : null }\r\n        </div>\r\n      :\r\n\r\n      <>\r\n        <FaTimes className=\"modal-close-btn\" onClick={() => setIsOpen(false)} />\r\n\r\n        <div className=\"blurred-bg\"></div>\r\n\r\n        <div className=\"modal-body submit-modal\">\r\n          <div className=\"detail-container\">\r\n            <div className=\"poster-image\">\r\n              {/* <img src=\"https://via.placeholder.com/400x600\" alt=\"\" /> */}\r\n              {/* <input id=\"poster\" type=\"file\" onChange={onChangePicture}/> */}\r\n              <div className=\"upload-btn\">\r\n                <label className=\"filelabel\">\r\n                  { \r\n                    pictureURL ? \r\n                      <FaFileAlt style={{ opacity: '0' }} />\r\n                    :\r\n                      <FaFileAlt />\r\n                  }\r\n                  <input id=\"poster\" type=\"file\" onChange={onChangePicture} />\r\n                </label>\r\n              </div>\r\n              \r\n              <img className=\"submitImg\" src={picture} />\r\n            </div>\r\n            <div className=\"poster-content\">\r\n              <form noValidate onSubmit={handleSubmit(addPoster)}>\r\n                <Grid container spacing={3} justify=\"center\">\r\n                  <Grid item xs={12}>\r\n                    <TextField \r\n                      id=\"title\"\r\n                      name=\"title\"\r\n                      type=\"text\"\r\n                      label=\"Title\"\r\n                      variant=\"outlined\"\r\n                      inputRef={register}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                      <KeyboardDatePicker\r\n                        className=\"date-picker\"\r\n                        id=\"date\"\r\n                        name=\"date\"\r\n                        // label=\"Date\"\r\n                        format=\"dd/mm/yyyy\"\r\n                        value={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        KeyboardButtonProps={{\r\n                          'aria-label': 'change date',\r\n                        }}\r\n                        inputRef={register}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </MuiPickersUtilsProvider>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                      <KeyboardTimePicker\r\n                        ampm={false}\r\n                        id=\"end_time\"\r\n                        name=\"end_time\"\r\n                        value={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        KeyboardButtonProps={{\r\n                          'aria-label': 'change time',\r\n                        }}\r\n                        inputRef={register}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </MuiPickersUtilsProvider>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField \r\n                      id=\"start_time\"\r\n                      name=\"start_time\"\r\n                      type=\"time\"\r\n                      label=\"End time\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      inputRef={register}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={4}>\r\n                    <TextField \r\n                      id=\"genre\"\r\n                      name=\"genre\"\r\n                      type=\"text\"\r\n                      label=\"Genre\"\r\n                      variant=\"outlined\"\r\n                      inputRef={register}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField \r\n                      id=\"price\"\r\n                      name=\"price\"\r\n                      type=\"number\"\r\n                      label=\"Price\"\r\n                      variant=\"outlined\"\r\n                      inputRef={register}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField \r\n                      id=\"location\"\r\n                      name=\"location\"\r\n                      type=\"text\"\r\n                      label=\"Location\"\r\n                      variant=\"outlined\"\r\n                      inputRef={register}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <ChipInput \r\n                      id=\"acts\" \r\n                      name=\"acts\" \r\n                      placeholder=\"Acts\"\r\n                      inputRef={register}\r\n                      fullWidth\r\n                      onChange={(chips) => handleChange(chips)}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextareaAutosize \r\n                      id=\"description\"\r\n                      name=\"description\"\r\n                      aria-label=\"description\" \r\n                      rowsMin={3} \r\n                      placeholder=\"Description\" \r\n                      ref={register}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    {\r\n                      pictureURL ?\r\n                        <button className=\"btn\" type=\"submit\" style={{ width: '100%' }}>Submit</button>\r\n                      :\r\n                        <button className=\"btn\" disabled type=\"submit\" style={{ width: '100%' }}>Submit</button>\r\n                    }\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    }\r\n\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { FaCloudUploadAlt } from 'react-icons/fa';\r\n\r\nimport './Tools.css';\r\n\r\nimport { SubmitForm } from '../forms/SubmitForm';\r\n\r\nexport const SubmitButton = () => {\r\n\r\n  const [submitFormOpened, setOpenSubmitForm] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <SubmitForm open={submitFormOpened} />\r\n\r\n      <div className=\"upload-icon\">\r\n        <FaCloudUploadAlt onClick={() => setOpenSubmitForm(!submitFormOpened)} />\r\n      </div>\r\n    </>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/nl';\r\n\r\nimport './Posters.css';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Masonry from 'react-masonry-css'\r\n\r\nimport { AdminTools } from '../widgets/AdminTools';\r\nimport { SubmitButton } from '../widgets/SubmitButton';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nexport const Posters = ({user}) => {\r\n\r\n  const breakpointColumnsObj = {\r\n    default: 5,\r\n    1100: 3,\r\n    700: 2,\r\n    500: 1\r\n  };\r\n\r\n  const [posters, setPosters] = useState([]);\r\n  const [allGenres, setAllGenres] = useState([]);\r\n\r\n  const [posterInfo, setPosterInfo] = useState([]);\r\n  \r\n  const [posterDetailOpened, setPosterDetailOpened] = useState(false);\r\n\r\n  const { register, handleSubmit } = useForm();\r\n  \r\n  // Search\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchResultsAmount, setSearchResultsAmount] = useState([]);\r\n\r\n  const [searchedTitle, setSearchedTitle] = useState(\"\");\r\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\r\n  const [selectedPrice, setSelectedPrice] = useState(\"\");\r\n  const [searchedAct, setSearchedAct] = useState(\"\");\r\n\r\n  const handleChange = event => {\r\n     setSearchedTitle(event.target.value);\r\n   };\r\n  const handleGenreFilter = event => {\r\n    setSelectedGenre(event.target.value);\r\n  };\r\n  const handlePriceFilter = event => {\r\n    setSelectedPrice(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const results = posters.filter(poster => {\r\n      return (\r\n        selectedPrice ? (\r\n          poster.title.toString().toLowerCase().indexOf(searchedTitle.toLowerCase()) > -1 &&\r\n          poster.genre.toLowerCase().indexOf(selectedGenre.toLowerCase()) > -1 &&\r\n          poster.price < parseInt(selectedPrice)\r\n        ) : (\r\n          poster.title.toString().toLowerCase().indexOf(searchedTitle.toLowerCase()) > -1 &&\r\n          poster.genre.toLowerCase().indexOf(selectedGenre.toLowerCase()) > -1 &&\r\n          poster.price < 9999\r\n        )\r\n      );\r\n    });\r\n\r\n    setSearchResultsAmount(results.length);\r\n    setSearchResults(results);\r\n\r\n  }, [searchedTitle, selectedGenre, selectedPrice]);\r\n\r\n  // Get all posters and store them in an array\r\n  const getPosters = () => {\r\n    // Get current date\r\n    const currentDate = moment().locale('nl').format(\"YYYY-MM-DD\");\r\n    // Empty the arrays\r\n    setPosters([]);\r\n    setAllGenres([]);\r\n    // Get posters\r\n    axios.get(`/api/posters/`)\r\n    .then(res => {\r\n      let availablePosters = [];\r\n      let date = '';\r\n      let genres = [];\r\n      // posters = res.data;\r\n      res.data.map(poster => { \r\n        date = moment(poster.date).locale('nl').format(\"YYYY-MM-DD\");\r\n        if (poster.accepted === true && date > currentDate) {\r\n          availablePosters.push(poster); \r\n\r\n          // Push unique genre to array\r\n          genres.push(poster.genre);\r\n          genres = genres.filter((x, i, a) => a.indexOf(x) == i);\r\n          setAllGenres(genres);\r\n        } \r\n      });\r\n\r\n      availablePosters.sort((a, b) => (a.creation_date > b.creation_date) ? 1 : -1);\r\n\r\n      setPosters(availablePosters);\r\n    }); \r\n  }\r\n\r\n  // Get posters on page load\r\n  useEffect(() => {\r\n    getPosters();\r\n  }, []);\r\n\r\n  const showPosterInfo = (id) => {\r\n    // Get poster detail information\r\n    axios.get(`/api/posters/${id}`)\r\n    .then(res => {\r\n      setPosterInfo(res.data);\r\n      setPosterDetailOpened(true);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={ posterDetailOpened ? 'slide-out slide-out-detail opened' : 'slide-out slide-out-detail'}>\r\n\r\n        { posterInfo ?\r\n        <>\r\n          <div className=\"blurred-bg\"></div>\r\n\r\n          <FaTimes className=\"modal-close-btn\" onClick={() => setPosterDetailOpened(false)} />\r\n\r\n          <div className=\"modal-body detail-modal\">\r\n            <div className=\"detail-container\">\r\n              <div className=\"poster-image\">\r\n                <img src={ posterInfo.image } alt={ posterInfo.title } />\r\n              </div>\r\n              <div className=\"poster-content\">\r\n                \r\n                  <Grid container spacing={3} justify=\"center\">\r\n                    <Grid item xs={12}>\r\n                      <h1>{ posterInfo.title }</h1>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                      { moment(posterInfo.date).locale('nl').format(\"YYYY-MM-DD\") }\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      { posterInfo.start_time }\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      { posterInfo.end_time }\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                      { posterInfo.genre }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      { posterInfo.price }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      { posterInfo.location }\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                    {/* { posterInfo.acts.map((act, index) => (\r\n                      act\r\n                    ))} */}\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      { posterInfo.description }\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n        : null }\r\n      </div>\r\n\r\n      <Container maxWidth=\"md\">\r\n\r\n        { user ?\r\n          <AdminTools />\r\n        : null }\r\n        { posterDetailOpened ? null :\r\n          <SubmitButton />\r\n        }\r\n        \r\n        <div className=\"filter-container\">\r\n          <div className=\"filters\">\r\n\r\n            {/* Title filter */}\r\n            <FormControl variant=\"outlined\">\r\n              <TextField \r\n                value={searchedTitle}\r\n                onChange={handleChange}\r\n                id=\"title\"\r\n                name=\"title\"\r\n                type=\"text\"\r\n                label=\"Search title\"\r\n                variant=\"outlined\"\r\n              />\r\n            </FormControl>\r\n\r\n            {/* Genre filter */}\r\n            <FormControl variant=\"outlined\">\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">Genre</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={selectedGenre}\r\n                onChange={handleGenreFilter}\r\n                label=\"Genre\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Remove filter</em>\r\n                </MenuItem>\r\n                {\r\n                  allGenres.map(genre => {\r\n                    return (\r\n                      <MenuItem value={genre}>{genre}</MenuItem>\r\n                    )\r\n                  })\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n          \r\n            {/* Price filter */}\r\n            <FormControl variant=\"outlined\">\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">Price</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={selectedPrice}\r\n                onChange={handlePriceFilter}\r\n                label=\"Price\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Remove filter</em>\r\n                </MenuItem>\r\n                <MenuItem value='0'>Free</MenuItem>\r\n                <MenuItem value='10'>10</MenuItem>\r\n                <MenuItem value='20'>20</MenuItem>\r\n                <MenuItem value='50'>50</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n          </div>\r\n          <div className=\"filter-results\">\r\n            <h3>{searchResultsAmount} posters matched your filters</h3>\r\n          </div>\r\n        </div>\r\n        \r\n        <Masonry\r\n          breakpointCols={breakpointColumnsObj}\r\n          className=\"my-masonry-grid poster-column\"\r\n          columnClassName=\"my-masonry-grid_column\"\r\n        >\r\n\r\n        {\r\n          searchResults.length ?\r\n            searchResults.map((poster, index) => (\r\n              <div className=\"poster\" onClick={() => showPosterInfo(poster._id)} key={index}>\r\n                <img src={poster.image} alt={poster.title} />\r\n              </div>\r\n            ))\r\n          : \r\n            posters.map((poster, index) => {\r\n              return (\r\n                <div className=\"poster\" onClick={() => showPosterInfo(poster._id)} key={index}>\r\n                  <img src={poster.image} alt={poster.title} />\r\n                </div>\r\n              )\r\n            })\r\n        }\r\n\r\n        </Masonry>\r\n\r\n\r\n      </Container>\r\n    </>\r\n  )\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport axios from 'axios';\r\nimport { FaTimes, FaCheck, FaDoorClosed, FaTrashAlt } from 'react-icons/fa';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/nl';\r\n\r\nimport './Posters.css';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Masonry from 'react-masonry-css'\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Tooltip } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport ChipInput from 'material-ui-chip-input';\r\n\r\nimport { AdminTools } from '../widgets/AdminTools';\r\n\r\nexport const Review = ({user}) => {\r\n\r\n  const breakpointColumnsObj = {\r\n    default: 5,\r\n    1100: 3,\r\n    700: 2,\r\n    500: 1\r\n  };\r\n\r\n  const [acts, setActs] = useState([]);\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const [posterTitle, setPosterTitle] = useState('');\r\n  const [posterGenre, setPosterGenre] = useState('');\r\n  const [posterId, setPosterId] = useState('');\r\n\r\n  const [posters, setPosters] = useState([]);\r\n\r\n  const [posterInfo, setPosterInfo] = useState([]);\r\n  const [posterDetailOpened, setPosterDetailOpened] = useState(false);\r\n\r\n  // Submit modal\r\n  const [picture, setPicture] = useState('https://via.placeholder.com/400x600');\r\n  const [pictureURL, setPictureURL] = useState('');\r\n\r\n  const onChangePicture = async e => {\r\n    setPicture(URL.createObjectURL(e.target.files[0]));\r\n    setPictureURL(e.target.files[0]);\r\n  };\r\n\r\n  // Get all posters and store them in an array\r\n  const getPosters = () => {\r\n    // Empty the arrays\r\n    setPosters([]);\r\n    // Get posters\r\n    axios.get(`/api/posters/not-accepted`)\r\n    .then(res => {\r\n      let posters = [];\r\n      posters = res.data;\r\n      posters.sort((a, b) => (a.creation_date > b.creation_date) ? 1 : -1)\r\n\r\n      posters.map((poster, index) => {\r\n        setPosters(posters => [...posters, poster]);\r\n      });\r\n    });\r\n  }\r\n\r\n  // Get posters on page load\r\n  useEffect(() => {\r\n    getPosters();\r\n  }, []);\r\n\r\n  const showPosterInfo = (id) => {\r\n    // Get poster detail information\r\n    axios.get(`/api/posters/${id}`)\r\n    .then(res => {\r\n      setPosterInfo(res.data);\r\n      setPosterDetailOpened(true);\r\n      setPictureURL(res.data.image);\r\n\r\n      // Set acts as chips from data\r\n      setActs([]);\r\n      res.data.acts.map(act => {\r\n        setActs(acts => [...acts, act] );\r\n      });\r\n\r\n      setPosterId(res.data._id);\r\n      setPosterTitle(res.data.title);\r\n      setPosterGenre(res.data.genre);\r\n    });\r\n  }\r\n\r\n  const acceptPoster = (id) => {\r\n    axios.put(`/api/posters/accept/${id}`)\r\n    .then(res => {\r\n      getPosters();\r\n      setPosterDetailOpened(false);\r\n    });\r\n  }\r\n\r\n  const rejectPoster = (id) => {\r\n    axios.put(`/api/posters/reject/${id}`)\r\n    .then(res => {\r\n      getPosters();\r\n      setPosterDetailOpened(false);\r\n    });\r\n  }\r\n\r\n  const deletePoster = (id) => {\r\n    axios.put(`/api/posters/delete/${id}`)\r\n    .then(res => {\r\n      getPosters();\r\n      setPosterDetailOpened(false);\r\n    });\r\n  }\r\n\r\n  // Add poster to the database\r\n  const editPoster = async (data) => {\r\n\r\n    const id = data.poster_id;\r\n    \r\n    let CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/dk9dh4jbu/upload';\r\n\r\n    const fd = new FormData();\r\n    fd.append('file', pictureURL);\r\n    fd.append('upload_preset', 'testing');\r\n    fd.append('cloud_name', 'dk9dh4jbu');\r\n\r\n    try {\r\n      const config = {\r\n        headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\r\n      };\r\n            \r\n      let result = await axios.post(CLOUDINARY_URL, fd, config);\r\n      console.log(result.data.url);\r\n    \r\n      var currentDate =  moment().locale('nl').add(1, 'hours').format(\"YYYY-MM-DD HH:mm:ss\");\r\n \r\n      const newPoster = {\r\n        image: result.data.url,\r\n        title: data.title,\r\n        genre: data.genre,\r\n        acts: acts,\r\n        description: data.description,\r\n        price: data.price,\r\n        date: data.date,\r\n        start_time: data.start_time,\r\n        end_time: data.end_time,\r\n        creation_date: currentDate,\r\n        accepted: false,\r\n        rejected: false\r\n      };\r\n  \r\n      axios.post(`/api/posters/edit/${id}`, newPoster)\r\n      .then(res => {\r\n        // getPosters();\r\n        console.log(res.data);\r\n        setPicture('');\r\n        setPictureURL('');\r\n        setPosterDetailOpened(false);\r\n      });\r\n\r\n    } catch(err) {\r\n        console.log(err);\r\n    }\r\n\r\n  }\r\n\r\n  const handleChange = (data) => {\r\n    setActs(acts => [...acts, data] );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={ posterDetailOpened ? 'slide-out slide-out-detail opened' : 'slide-out slide-out-detail'}>\r\n\r\n        { posterInfo ?\r\n        <>\r\n          <div className=\"blurred-bg\"></div>\r\n\r\n          <FaTimes className=\"modal-close-btn\" onClick={() => setPosterDetailOpened(false)} />\r\n\r\n          <div className=\"modal-body detail-modal\">\r\n            <div className=\"detail-container\">\r\n              <div className=\"poster-image\">\r\n                <img src={ pictureURL } alt={ posterInfo.title } />\r\n              </div>\r\n              <div className=\"poster-content\">\r\n                \r\n                <form noValidate onSubmit={handleSubmit(editPoster)}>\r\n                  <Grid container spacing={3} justify=\"center\">\r\n\r\n                    <Grid item xs={12}>\r\n                      <div className=\"action-buttons\">\r\n                        <Tooltip title=\"Accept\" class=\"btn action-btn btn-success\" onClick={() => acceptPoster(posterInfo._id)}>\r\n                          <IconButton aria-label=\"accept\">\r\n                            <FaCheck />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Reject\" class=\"btn action-btn btn-reject\" onClick={() => acceptPoster(posterInfo._id)}>\r\n                          <IconButton aria-label=\"reject\">\r\n                            <FaDoorClosed />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete\" class=\"btn action-btn btn-delete\" onClick={() => acceptPoster(posterInfo._id)}>\r\n                          <IconButton aria-label=\"delete\">\r\n                            <FaTrashAlt />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <TextField \r\n                        id=\"title\"\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        label=\"Title\"\r\n                        variant=\"outlined\"\r\n                        inputRef={register}\r\n                        value={posterTitle}\r\n                        onChange={e => setPosterTitle(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                      <TextField \r\n                        id=\"date\"\r\n                        name=\"date\"\r\n                        type=\"date\"\r\n                        label=\"Date\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        inputRef={register}\r\n                        value={moment(posterInfo.date).locale('nl').format(\"YYYY-MM-DD\")}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <TextField \r\n                        id=\"end_time\"\r\n                        name=\"end_time\"\r\n                        type=\"time\"\r\n                        label=\"Start time\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        inputRef={register}\r\n                        value={posterInfo.start_time}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <TextField \r\n                        id=\"start_time\"\r\n                        name=\"start_time\"\r\n                        type=\"time\"\r\n                        label=\"End time\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        inputRef={register}\r\n                        value={posterInfo.end_time}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                      <TextField \r\n                        id=\"genre\"\r\n                        name=\"genre\"\r\n                        type=\"text\"\r\n                        label=\"Genre\"\r\n                        variant=\"outlined\"\r\n                        inputRef={register}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        value={posterInfo.genre}\r\n                        onChange={e => setPosterGenre(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField \r\n                        id=\"price\"\r\n                        name=\"price\"\r\n                        type=\"number\"\r\n                        label=\"Price\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        inputRef={register}\r\n                        value={posterInfo.price}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField \r\n                        id=\"location\"\r\n                        name=\"location\"\r\n                        type=\"text\"\r\n                        label=\"Location\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        inputRef={register}\r\n                        value={posterInfo.location}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <ChipInput \r\n                        id=\"acts\" \r\n                        name=\"acts\" \r\n                        placeholder=\"Acts\"\r\n                        inputRef={register}\r\n                        fullWidth\r\n                        value={acts}\r\n                        onChange={(chips) => handleChange(chips)}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <TextareaAutosize \r\n                        id=\"description\"\r\n                        name=\"description\"\r\n                        aria-label=\"description\" \r\n                        rowsMin={3} \r\n                        placeholder=\"Description\" \r\n                        inputRef={register}\r\n                        value={posterInfo.description}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <TextField \r\n                      id=\"poster_id\"\r\n                      name=\"poster_id\"\r\n                      type=\"hidden\"\r\n                      inputRef={register}\r\n                      value={posterId}\r\n                      onChange={e => setPosterId(e.target.value)}\r\n                      style={{ opacity: '0' }}\r\n                    />\r\n\r\n                    <Grid item xs={12}>\r\n                      <button class=\"btn\" type=\"submit\" style={{ width: '100%' }}>Update poster</button>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                </form>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n        : null }\r\n      </div>\r\n\r\n      <Container maxWidth=\"md\">\r\n\r\n        <AdminTools />\r\n\r\n        { posters.length ?\r\n        // There are posters in the array\r\n          \r\n          <Masonry\r\n          breakpointCols={breakpointColumnsObj}\r\n          className=\"my-masonry-grid poster-column\"\r\n          columnClassName=\"my-masonry-grid_column\"\r\n        >\r\n\r\n          { posters.map((poster, index) => {\r\n            return (\r\n              <div className=\"poster\" onClick={() => showPosterInfo(poster._id)} key={index}>\r\n                <img src={poster.image} alt={poster.title} />\r\n              </div>\r\n            )\r\n          }) }\r\n\r\n        </Masonry>\r\n\r\n        :\r\n\r\n        <Grid container spacing={1} justify=\"center\">\r\n          <h1>No posters to review</h1>\r\n        </Grid>\r\n\r\n        }\r\n      </Container>\r\n    </>\r\n  )\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/nl';\r\n\r\nimport './Posters.css';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Masonry from 'react-masonry-css'\r\n\r\nimport { AdminTools } from '../widgets/AdminTools';\r\nimport { SubmitButton } from '../widgets/SubmitButton';\r\n\r\nexport const Archive = ({user}) => {\r\n\r\n  const breakpointColumnsObj = {\r\n    default: 5,\r\n    1100: 3,\r\n    700: 2,\r\n    500: 1\r\n  };\r\n\r\n  const [posters, setPosters] = useState([]);\r\n\r\n  const [posterInfo, setPosterInfo] = useState([]);\r\n  \r\n  const [posterDetailOpened, setPosterDetailOpened] = useState(false);\r\n\r\n  const { register, handleSubmit } = useForm();\r\n  \r\n  // Search\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  // Get all posters and store them in an array\r\n  const getPosters = () => {\r\n    // Get current date\r\n    const currentDate = moment().locale('nl').format(\"YYYY-MM-DD\");\r\n    // Empty the arrays\r\n    setPosters([]);\r\n    // Get posters\r\n    axios.get(`/api/posters/`)\r\n    .then(res => {\r\n      let availablePosters = [];\r\n      let date = '';\r\n      // posters = res.data;\r\n      res.data.map(poster => { \r\n        date = moment(poster.date).locale('nl').format(\"YYYY-MM-DD\");\r\n        if (poster.accepted === true && date < currentDate) {\r\n          availablePosters.push(poster); \r\n        } \r\n      });\r\n\r\n      availablePosters.sort((a, b) => (a.creation_date > b.creation_date) ? 1 : -1);\r\n\r\n      setPosters(availablePosters);\r\n    }); \r\n  }\r\n\r\n  // Get posters on page load\r\n  useEffect(() => {\r\n    getPosters();\r\n  }, []);\r\n\r\n  const showPosterInfo = (id) => {\r\n    // Get poster detail information\r\n    axios.get(`/api/posters/${id}`)\r\n    .then(res => {\r\n      setPosterInfo(res.data);\r\n      setPosterDetailOpened(true);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={ posterDetailOpened ? 'slide-out slide-out-detail opened' : 'slide-out slide-out-detail'}>\r\n\r\n        { posterInfo ?\r\n        <>\r\n          <div className=\"blurred-bg\"></div>\r\n\r\n          <FaTimes className=\"modal-close-btn\" onClick={() => setPosterDetailOpened(false)} />\r\n\r\n          <div className=\"modal-body detail-modal\">\r\n            <div className=\"detail-container\">\r\n              <div className=\"poster-image\">\r\n                <img src={ posterInfo.image } alt={ posterInfo.title } />\r\n              </div>\r\n              <div className=\"poster-content\">\r\n                \r\n                  <Grid container spacing={3} justify=\"center\">\r\n                    <Grid item xs={12}>\r\n                      <h1>{ posterInfo.title }</h1>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                      { moment(posterInfo.date).locale('nl').format(\"YYYY-MM-DD\") }\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      { posterInfo.start_time }\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      { posterInfo.end_time }\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                      { posterInfo.genre }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      { posterInfo.price }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      { posterInfo.location }\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                    {/* { posterInfo.acts.map((act, index) => (\r\n                      act\r\n                    ))} */}\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      { posterInfo.description }\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n        : null }\r\n      </div>\r\n\r\n      <Container maxWidth=\"md\">\r\n\r\n        <AdminTools />\r\n\r\n        { user ?\r\n          <AdminTools />\r\n        : null }\r\n        \r\n        <Masonry\r\n          breakpointCols={breakpointColumnsObj}\r\n          className=\"my-masonry-grid poster-column\"\r\n          columnClassName=\"my-masonry-grid_column\"\r\n        >\r\n\r\n        {\r\n          posters.map((poster, index) => {\r\n            return (\r\n              <div className=\"poster\" onClick={() => showPosterInfo(poster._id)} key={index}>\r\n                <img src={poster.image} alt={poster.title} />\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n\r\n        </Masonry>\r\n\r\n\r\n      </Container>\r\n    </>\r\n  )\r\n\r\n}","import { createContext } from 'react';\r\n\r\nexport const UserContext = createContext(null);","import 'date-fns';\r\nimport React from 'react';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/nl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nexport const Date = () => {\r\n  // The first commit of Material-UI\r\n  const [selectedDate, setSelectedDate] = React.useState(moment().locale('nl').format(\"YYYY-MM-DD\"));\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label=\"Date picker inline\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{ \r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Date picker dialog\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Time picker\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}","import React, { useEffect, useState, useMemo } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport './Typography.css';\nimport './components/Form.css';\n\nimport './components/Modal.css';\n\n// Firebase\nimport { firebase } from './config/firebase';\n\nimport { Signup } from './components/account/Signup';\nimport { Login } from './components/account/Login';\nimport { Logout } from './components/account/Logout';\n\nimport { Posters } from './components/posters/Posters'; \nimport { Review } from './components/posters/Review';\nimport { Archive } from './components/posters/Archive';\n\nimport { UserContext } from \"./components/account/UserContext\";\n\nimport { Date } from './components/Date';\n\nexport const App = () => {\n\n  const [user, setUser] = useState(null);\n\n  const value = useMemo(() => ({ user, setUser }), [user, setUser]);\n\n  useEffect(() => {\n    var unsubscribe = firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        setUser(user);\n        console.log('ingelogt');\n      } else {\n        setUser(null);\n        console.log('niet ingelogt');\n      }\n    });\n    return function cleanup() {\n      unsubscribe();\n    }\n  }, []);\n\n  return (\n    <UserContext.Provider value={value}>\n      <BrowserRouter>\n        <div className=\"wrapper\">\n          \n          <Route path=\"/signup\" exact component={ Signup } />\n          <Route path=\"/login\" exact component={ Login } />\n\n          { user ?\n          <Route path=\"/logout\" exact component={ Logout } />\n          : null }\n  \n          <Route\n            exact\n            path='/'\n            render={(props) => (\n              <Posters {...props} user={user} />\n            )}\n          />\n\n          { user ?\n          <>\n            <Route path=\"/review\" exact component={ Review } user={user} />\n            <Route path=\"/archive\" exact component={ Archive } user={user} />\n          </>\n          : null }\n\n          <Route path=\"/date\" exact component={ Date } />\n\n        </div>\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}